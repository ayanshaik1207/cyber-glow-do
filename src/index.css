@tailwind base;
@tailwind components;
@tailwind utilities;

/* Cyberpunk Neon Design System - All colors in HSL format */
@layer base {
  :root {
    /* Core cyberpunk color palette */
    --background: 0 0% 4%;           /* Deep Black #0a0a0a */
    --surface: 0 0% 10%;             /* Dark Charcoal #1a1a1a */
    --foreground: 180 100% 95%;      /* Near White */
    
    /* Neon accent colors */
    --neon-cyan: 180 100% 50%;       /* Electric Cyan #00ffff */
    --neon-purple: 271 76% 53%;      /* Electric Purple #8a2be2 */
    --neon-cyan-muted: 180 100% 25%; /* Darker cyan */
    --neon-purple-muted: 271 76% 25%; /* Darker purple */
    
    /* Semantic colors using neon palette */
    --primary: 180 100% 50%;         /* Neon Cyan */
    --primary-foreground: 0 0% 4%;
    --secondary: 0 0% 10%;           /* Dark Charcoal */
    --secondary-foreground: 180 100% 95%;
    --accent: 271 76% 53%;           /* Neon Purple */
    --accent-foreground: 0 0% 4%;
    
    /* UI elements */
    --card: 0 0% 10%;
    --card-foreground: 180 100% 95%;
    --border: 180 100% 20%;
    --input: 0 0% 15%;
    --ring: 180 100% 50%;
    --muted: 0 0% 15%;
    --muted-foreground: 180 50% 70%;
    
    /* Status colors with neon theme */
    --success: 120 100% 40%;         /* Neon Green */
    --warning: 45 100% 50%;          /* Neon Yellow */
    --destructive: 0 100% 50%;       /* Neon Red */
    --destructive-foreground: 0 0% 4%;
    
    /* Component specific */
    --popover: 0 0% 8%;
    --popover-foreground: 180 100% 95%;
    
    --radius: 0.75rem;
    
    /* Custom neon effects */
    --glow-cyan: 0 0 20px hsl(180 100% 50% / 0.5);
    --glow-purple: 0 0 20px hsl(271 76% 53% / 0.5);
    --glow-intense: 0 0 40px hsl(180 100% 50% / 0.8);
    
    /* Gradients */
    --gradient-primary: linear-gradient(135deg, hsl(180 100% 50%), hsl(271 76% 53%));
    --gradient-surface: linear-gradient(145deg, hsl(0 0% 8%), hsl(0 0% 12%));
    --gradient-glow: radial-gradient(circle, hsl(180 100% 50% / 0.1), transparent);
  }
}

@layer base {
  * {
    @apply border-border;
  }
  
  html {
    scroll-behavior: smooth;
  }

  body {
    @apply bg-background text-foreground font-sans;
    background-attachment: fixed;
    background-image: 
      radial-gradient(circle at 20% 80%, hsl(180 100% 50% / 0.05) 0%, transparent 50%),
      radial-gradient(circle at 80% 20%, hsl(271 76% 53% / 0.05) 0%, transparent 50%);
  }
  
  /* Custom scrollbar */
  ::-webkit-scrollbar {
    width: 8px;
  }
  
  ::-webkit-scrollbar-track {
    background: hsl(var(--surface));
  }
  
  ::-webkit-scrollbar-thumb {
    background: linear-gradient(180deg, hsl(180 100% 50%), hsl(271 76% 53%));
    border-radius: 4px;
  }
  
  ::-webkit-scrollbar-thumb:hover {
    box-shadow: var(--glow-cyan);
  }
}

@layer components {
  /* Universal animation classes */
  .animate-glow {
    animation: glow 2s ease-in-out infinite alternate;
  }
  
  .animate-pulse-neon {
    animation: pulse-neon 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }
  
  .animate-slide-up {
    animation: slide-up 0.4s ease-out;
  }
  
  .animate-slide-in-right {
    animation: slide-in-right 0.3s ease-out;
  }
  
  .animate-fade-in {
    animation: fade-in 0.3s ease-out;
  }
  
  .animate-scale-in {
    animation: scale-in 0.2s ease-out;
  }
  
  /* Interactive effects */
  .hover-glow {
    transition: all 0.2s ease;
  }
  
  .hover-glow:hover {
    box-shadow: var(--glow-cyan);
    transform: translateY(-2px);
  }
  
  .hover-glow-purple:hover {
    box-shadow: var(--glow-purple);
    transform: translateY(-2px);
  }
  
  .click-scale {
    transition: transform 0.1s ease;
  }
  
  .click-scale:active {
    transform: scale(0.95);
  }
  
  /* Ripple effect base */
  .ripple {
    position: relative;
    overflow: hidden;
  }
  
  .ripple::after {
    content: '';
    position: absolute;
    width: 0;
    height: 0;
    border-radius: 50%;
    background: hsl(180 100% 50% / 0.3);
    transform: scale(0);
    transition: all 0.3s ease;
    pointer-events: none;
  }
  
  .ripple:active::after {
    width: 300px;
    height: 300px;
    margin-left: -150px;
    margin-top: -150px;
    transform: scale(1);
  }
  
  /* Neon text effects */
  .text-neon {
    color: hsl(180 100% 50%);
    text-shadow: 
      0 0 5px hsl(180 100% 50% / 0.5),
      0 0 10px hsl(180 100% 50% / 0.3),
      0 0 15px hsl(180 100% 50% / 0.2);
  }
  
  .text-neon-purple {
    color: hsl(271 76% 53%);
    text-shadow: 
      0 0 5px hsl(271 76% 53% / 0.5),
      0 0 10px hsl(271 76% 53% / 0.3),
      0 0 15px hsl(271 76% 53% / 0.2);
  }
  
  /* Gradient text */
  .text-gradient {
    background: var(--gradient-primary);
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 200% 200%;
    animation: gradient-shift 3s ease infinite;
  }
  
  /* Grid pattern background */
  .grid-bg {
    background-image: 
      linear-gradient(hsl(180 100% 50% / 0.1) 1px, transparent 1px),
      linear-gradient(90deg, hsl(180 100% 50% / 0.1) 1px, transparent 1px);
    background-size: 20px 20px;
    animation: grid-move 20s linear infinite;
  }
}

@keyframes glow {
  from { box-shadow: 0 0 20px hsl(180 100% 50% / 0.3); }
  to { box-shadow: 0 0 30px hsl(180 100% 50% / 0.8), 0 0 40px hsl(180 100% 50% / 0.4); }
}

@keyframes pulse-neon {
  0%, 100% { box-shadow: 0 0 5px hsl(180 100% 50% / 0.5); }
  50% { box-shadow: 0 0 20px hsl(180 100% 50% / 0.8), 0 0 30px hsl(180 100% 50% / 0.4); }
}

@keyframes slide-up {
  from { transform: translateY(20px); opacity: 0; }
  to { transform: translateY(0); opacity: 1; }
}

@keyframes slide-in-right {
  from { transform: translateX(100%); opacity: 0; }
  to { transform: translateX(0); opacity: 1; }
}

@keyframes fade-in {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes scale-in {
  from { transform: scale(0.9); opacity: 0; }
  to { transform: scale(1); opacity: 1; }
}

@keyframes gradient-shift {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

@keyframes grid-move {
  0% { transform: translate(0, 0); }
  100% { transform: translate(20px, 20px); }
}

